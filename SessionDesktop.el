;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Sun Jan 31 21:11:40 2016
;; Desktop file format version 206
;; Emacs version 24.4.51.2
(setq revive:frame-configuration-to-restore
  '(progn 
     (revive:restore-frame '((tool-bar-position . top) (explicit-name) (icon-name) (bottom-divider-width . 0) (right-divider-width . 0) (top . 71) (left . 328) (unsplittable) (modeline . t) (width . 92) (height . 49) (border-color . "black") (mouse-color . "black") (environment) (visibility . t) (cursor-color . "white") (background-mode . dark) (horizontal-scroll-bars . t) (fullscreen) (alpha) (scroll-bar-width . 0) (cursor-type . box) (auto-lower) (auto-raise) (icon-type) (title) (buffer-predicate) (tool-bar-lines . 0) (menu-bar-lines . 1) (right-fringe . 11) (left-fringe . 10) (line-spacing) (background-color . "DodgerBlue4") (foreground-color . "white") (vertical-scroll-bars) (internal-border-width . 2) (border-width . 0) (font . "-*-Panic Sans-normal-normal-normal-*-11-*-*-*-m-0-iso10646-1") (fontsize . 0)) '(92 49 ((0 0 95 24) (0 24 95 48)) (("~/Library/Application Support/Aquamacs Emacs/scratch buffer" "*scratch*" 510 1 ((tab "*scratch*" "/Users/davem/Library/Application Support/Aquamacs Emacs/scratch buffer"))) (nil "*Warnings*" 369 1 nil))))))

;; Global section:
(setq desktop-saved-frameset [frameset 1 (22190 30860 939994 0) (desktop . "206") "davem@davem-mbp" nil nil ((((font-backend mac-ct ns) (fontsize . 0) (font . "-*-Panic Sans-normal-normal-normal-*-11-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars) (foreground-color . "white") (background-color . "DodgerBlue4") (line-spacing) (left-fringe . 10) (right-fringe . 11) (menu-bar-lines . 1) (tool-bar-lines . 0) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (alpha) (fullscreen) (horizontal-scroll-bars . t) (display-type . color) (background-mode . dark) (cursor-color . "white") (visibility . t) (environment) (mouse-color . "black") (border-color . "black") (frameset--id . "DEF1-534C-5006-526C") (frameset--mini t . t) (height . 49) (width . 92) (modeline . t) (minibuffer . t) (unsplittable) (left . 328) (top . 71) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "davem-mbp") (explicit-name) (tool-bar-position . top)) ((min-height . 8) (min-width . 10) (min-height-ignore . 6) (min-width-ignore . 5) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 104) (min-pixel-width . 70) (min-pixel-height-ignore . 58) (min-pixel-width-ignore . 35) (min-pixel-height-safe . 26) (min-pixel-width-safe . 14)) vc (pixel-width . 665) (pixel-height . 624) (total-width . 95) (total-height . 48) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 665) (pixel-height . 312) (total-width . 95) (total-height . 24) (normal-height . 0.5) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 10 11 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 510) (start . 1))) (leaf (last . t) (pixel-width . 665) (pixel-height . 312) (total-width . 95) (total-height . 24) (normal-height . 0.5) (normal-width . 1.0) (buffer "*Warnings*" (selected) (hscroll . 0) (fringes 10 11 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 369) (start . 1)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("org-ca" "org-called-" "org" "rope" "auto-complete" "yamli" "popupi" "auto-complete" "pydoc" "popup" "jedi" "jedii" "jedi" "jedi+i" "jedi" "jedi`"))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/.ido.last" "/Users/davem/Library/Preferences/Aquamacs Emacs/customizations.el" "~/.ido.last" "/var/folders/1g/555fx04j01q7kbvytw92c0h40000gn/T/Safari - What's the best way to integrate the use of Markdown in Scrivener without giving up some of the tools found in apps like Multimarkdown Composer? - Quora 002.txt" "~/.ido.last" "~/.emacs.d/blue-mood-theme.el" "~/.emacs.d/Dave-theme.el" "~/.ido.last" "~/.emacs.d/Dave-theme.el" "~/.ido.last" "~/Documents/Ongoing/SLOD/htdocs/wp-content/plugins/explanatory-dictionary/public/assets/js/qtip/jquery.qtip.min.js" "~/.ido.last" "~/tres/tresapp/project/views.py" "~/tres/tresapp/run.py" "~/tres/tresapp/project/__init__.py" "~/tres/tresapp/project/helpers.py" "~/tres/tresapp/project/views.py" "~/tres/tresapp/project/__init__.py" "~/tres/tresapp/project/views.py" "~/tres/tresapp/project/__init__.py" "~/tres/tresapp/run.py" "~/tres/tresapp/project/views.py" "~/tres/tresapp/run.py" "~/tres/tresapp/project/views.py" "~/tres/tresapp/run.py" "~/tres/tresapp/project/views.py" "~/tres/tresapp/run.py" "~/tres/tresapp/project/views.py" "~/tres/tresapp/run.py" "~/.ido.last" "~/tres/project/project/views.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/run.py" "~/tres/project/project/views.py" "~/tres/project/project/__init__.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/project/views.py" "~/tres/project/project/project.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/project/project.py" "~/tres/project/project/__init__.py" "~/tres/project/project/project.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/run.py" "~/tres/project/project/project.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/project/project.py" "~/tres/project/project/__init__.py" "~/tres/project/project/project.py" "~/tres/project/project/__init__.py" "/Users/davem/tres/schema.sql" "~/tres/project/project/project.py" "~/tres/project/run.py" "~/tres/project/project/views.py" "~/tres/project/project/__init__.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/run.py" "~/tres/project/project/__init__.py" "~/tres/project/project.py" "~/tres/run.py" "~/tres/project/project.py" "~/tres/project/__init__.py" "~/tres/project/templates/base.html" "~/tres/run.py" "~/tres/project/__init__.py" "~/tres/run.py" "~/tres/project/__init__.py" "~/tres/project/project.py" "~/tres/project/__init__.py" "~/tres/run.py" "~/tres/project/project.py" "~/tres/run.py" "~/tres/project/__init__.py" "~/tres/run.py" "~/tres/run.py" "~/tres/" "~/.ido.last" "~/tres/run.py" "~/tres/__init__.py" "/Users/davem/tres/schema.sql" "~/tres/project/static" "~/tres" "/Users/davem/killme.py" "~/.ido.last" "/Users/davem/killme.py" "~/.ido.last" "~/Library/Application Support/Aquamacs Emacs/default.el" "~/.ido.last" "~/killme.py" "/Users/davem/.emacs" "~/.ido.last"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/Users/davem/Library/Application Support/Aquamacs Emacs/scratch buffer"
  "*scratch*"
  'text-mode
  '(auto-fill-mode smart-spacing-mode yas/minor-mode)
  510
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8) (truncate-lines)))

